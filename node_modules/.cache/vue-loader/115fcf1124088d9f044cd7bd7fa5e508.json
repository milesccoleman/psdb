{"remainingRequest":"/Users/aletheia/Desktop/pbsdb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aletheia/Desktop/pbsdb/src/components/PublicSpeakingDashboard.vue?vue&type=style&index=0&id=80aa4558&prod&scoped=true&lang=css&","dependencies":[{"path":"/Users/aletheia/Desktop/pbsdb/src/components/PublicSpeakingDashboard.vue","mtime":1690856562000},{"path":"/Users/aletheia/Desktop/pbsdb/node_modules/css-loader/dist/cjs.js","mtime":1690851804000},{"path":"/Users/aletheia/Desktop/pbsdb/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1690851819000},{"path":"/Users/aletheia/Desktop/pbsdb/node_modules/postcss-loader/src/index.js","mtime":1690851813000},{"path":"/Users/aletheia/Desktop/pbsdb/node_modules/cache-loader/dist/cjs.js","mtime":1690851800000},{"path":"/Users/aletheia/Desktop/pbsdb/node_modules/vue-loader/lib/index.js","mtime":1690851819000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmNkbmZvbnRzLmNvbS9jc3MvbGNkJyk7CiN0ZXh0RW1vdGlvbiwgI2ZhY2VFbW90aW9uLCAjdm9pY2VFbW90aW9uLCAjd3BtIHsKZGlzcGxheTogaW5saW5lLWJsb2NrOyAKfQpkaXYgewpiYWNrZ3JvdW5kLWNvbG9yOiBub25lOyAKY29sb3I6ICM3MWM2OGI7IAoKfQouY2hhcnRXaW5kb3cgewpwb3NpdGlvbjogcmVsYXRpdmU7CmRpc3BsYXk6IGlubGluZS1ibG9jazsKd2lkdGg6IDgwJTsgIAoKfQoub3B0aW9uc0J1dHRvbiAgewpoZWlnaHQ6IDUwcHg7CndpZHRoOiA3NXB4OyAKcGFkZGluZzogMTJweDsgCmZvbnQtc2l6ZTogMTBweDsgCm1hcmdpbjogNXB4Owpib3JkZXI6IG5vbmU7IApmb250LXdlaWdodDogYm9sZDsgCmNvbG9yOiBibGFjazsgCmZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsKfQoKLnRpdGxlIHsKY29sb3I6IHdoaXRlOyAKfQoKI21lc3NhZ2VUd28gewpjb2xvcjogI2Y0OGQ3OTsgCmZvbnQtc2l6ZTogMjVweDsgCn0KCiNtZXNzYWdlVGhyZWUgewpjb2xvcjogd2hpdGU7IApmb250LXNpemU6IDI1cHg7IAp9CgojYmVnaW4gewpiYWNrZ3JvdW5kLWNvbG9yOiAjYzMwMGZmOwpib3JkZXI6IG5vbmU7IApoZWlnaHQ6IDUwcHg7IAp3aWR0aDogMTAwcHg7IApmb250LXdlaWdodDogYm9sZDsgCmNvbG9yOiBibGFjazsgCmZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsKZm9udC1zaXplOiAyMHB4OyAKbWFyZ2luLXRvcDogNDBweDsgCm1hcmdpbi1ib3R0b206IC0yMHB4OyAKfQoKI2JlZ2luOmhvdmVyIHsKYmFja2dyb3VuZC1jb2xvcjogI2ZkZmQ5NjsgCn0KCiNzdGFydCB7CmJhY2tncm91bmQtY29sb3I6ICNDQkMzRTM7IApib3JkZXI6IG5vbmU7IApoZWlnaHQ6IDUwcHg7IAp3aWR0aDogMTAwcHg7IApmb250LXdlaWdodDogYm9sZDsgCmNvbG9yOiBibGFjazsgCmZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsKZm9udC1zaXplOiAyMHB4OyAKbWFyZ2luOiAxMHB4OyAKfQoKI3N0YXJ0OmhvdmVyIHsKYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjsgCn0KCiNzdG9wIHsKYmFja2dyb3VuZC1jb2xvcjogI0NCQzNFMzsgCmJvcmRlcjogbm9uZTsgCmhlaWdodDogNTBweDsgCndpZHRoOiAxMDBweDsgCmZvbnQtd2VpZ2h0OiBib2xkOyAKY29sb3I6IGJsYWNrOyAKZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwpmb250LXNpemU6IDIwcHg7IAptYXJnaW46IDEwcHg7IAp9Cgojc3RvcDpob3ZlciB7CmJhY2tncm91bmQtY29sb3I6ICNmZjcyNmY7IAp9CgojcmVzZXQgewpiYWNrZ3JvdW5kLWNvbG9yOiAjQ0JDM0UzOyAKYm9yZGVyOiBub25lOyAKaGVpZ2h0OiA1MHB4OyAKd2lkdGg6IDEwMHB4OyAKZm9udC13ZWlnaHQ6IGJvbGQ7IApjb2xvcjogYmxhY2s7IApmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7CmZvbnQtc2l6ZTogMjBweDsgCm1hcmdpbjogMTBweDsgCn0KCiNyZXNldDpob3ZlciB7CmJhY2tncm91bmQtY29sb3I6IGxpZ2h0eWVsbG93OyAKfQoKI25leHQgewpiYWNrZ3JvdW5kLWNvbG9yOiAjNzc2NmM2OyAKYm9yZGVyOiBub25lOyAKaGVpZ2h0OiA1MHB4OyAKd2lkdGg6IDEwMHB4OyAKZm9udC13ZWlnaHQ6IGJvbGQ7IApjb2xvcjogYmxhY2s7IApmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7CmZvbnQtc2l6ZTogMjBweDsgCm1hcmdpbi10b3A6IDQwcHg7IAptYXJnaW4tYm90dG9tOiAtMjBweDsgCn0KCiNuZXh0OmhvdmVyIHsKYmFja2dyb3VuZC1jb2xvcjogI0ZGQzMwMDsgCn0KCiNvdXRwdXQgewptYXJnaW46IGF1dG87IApjb2xvcjogI2Y0OGQ3OTsgCmJhY2tncm91bmQtY29sb3I6ICMyMjI4MzE7IAp3aWR0aDogODAlOyAgCnRleHQtYWxpZ246IGxlZnQ7IApvdmVyZmxvdzogc2Nyb2xsOyAKaGVpZ2h0OiAxNzBweDsgCmZvbnQtc2l6ZTogMjVweDsKbWFyZ2luLXRvcDogMHB4OwptYXJnaW4tYm90dG9tOiAwcHgKfQoKI3dwbUNoYXJ0IHsKb3ZlcmZsb3c6IGF1dG87IAp3aWR0aDogODAlOyAKZGlzcGxheTogaW5saW5lLWJsb2NrOwptYXJnaW4tdG9wOiAzcHg7Cm1hcmdpbi1ib3R0b206IDBweDsgCn0KCiN2b2x1bWVDaGFydCB7Cm92ZXJmbG93OiBhdXRvOyAKd2lkdGg6IDgwJTsgCmRpc3BsYXk6IGlubGluZS1ibG9jazsKbWFyZ2luLXRvcDogLTNweDsgCn0KCiN0ZXh0RW1vdGlvbkNoYXJ0IHsKb3ZlcmZsb3c6IGF1dG87IAp3aWR0aDogODAlOyAKZGlzcGxheTogaW5saW5lLWJsb2NrOwptYXJnaW4tdG9wOiAtM3B4OyAKfQoKI2ZhY2VFbW90aW9uQ2hhcnQgewpvdmVyZmxvdzogYXV0bzsgCndpZHRoOiA4MCU7IApkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cm1hcmdpbi10b3A6IC0zcHg7IAp9CgojcmF3RGF0YSB7CmRpc3BsYXk6IG5vbmU7IAptYXJnaW46IGF1dG87IApjb2xvcjogbGF3bmdyZWVuOyAKYmFja2dyb3VuZC1jb2xvcjogIzIyMjgzMTsgCndpZHRoOiA4MCU7ICAKdGV4dC1hbGlnbjogbGVmdDsgCm92ZXJmbG93OiBzY3JvbGw7IApoZWlnaHQ6IDEwMHB4OyAKZm9udC1zaXplOiAyNXB4OwptYXJnaW46IDBweDsKfQoKI2RhdGFIaWRlQnV0dG9uIHsKbWFyZ2luOiBhdXRvOyAKY29sb3I6ICAjMjIyODMxOyAKYmFja2dyb3VuZC1jb2xvcjogIzIyMjgzMTsgCndpZHRoOiA0MCU7ICAKdGV4dC1hbGlnbjogY2VudGVyOyAKaGVpZ2h0OiAzMHB4OyAKZm9udC1zaXplOiAxMHB4OwptYXJnaW46IDBweDsKYm9yZGVyOiBub25lOyAKfQoKI2RhdGFTaG93QnV0dG9uIHsKbWFyZ2luOiBhdXRvOyAKY29sb3I6ICAjMjIyODMxOyAKYmFja2dyb3VuZC1jb2xvcjogIzIyMjgzMTsgCndpZHRoOiA0MCU7ICAKdGV4dC1hbGlnbjogY2VudGVyOyAKaGVpZ2h0OiAzMHB4OyAKZm9udC1zaXplOiAxMHB4OwptYXJnaW46IDBweDsKYm9yZGVyOiBub25lOyAKfQoKaDEgewpmb250LXNpemU6IDUwcHg7Cn0KaDMgewogIG1hcmdpbjogNDBweCAwIDA7Cn0KdWwgewogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICBwYWRkaW5nOiAwcHg7Cn0KbGkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMTBweDsKfQphIHsKICBjb2xvcjogIzQyYjk4MzsKfQoKI3RhbGtpbmcgewpoZWlnaHQ6IDEwMHB4OyAKbWFyZ2luLWJvdHRvbTogLTIwcHg7IAotd2Via2l0LWZpbHRlcjogaW52ZXJ0KDEpOwogICBmaWx0ZXI6IGludmVydCgxKTsKfQoKI3RpbWVyIHsKYmFja2dyb3VuZDogIzIyMjgzMTsgCmNvbG9yOiB3aGl0ZTsgCmZvbnQtc2l6ZTogNTBweDsgCmZvbnQtZmFtaWx5OiAnTENEJywgc2Fucy1zZXJpZjsKaGVpZ2h0OiAxMDBweDsgCndpZHRoOiA4MCU7IApib3JkZXI6IG5vbmU7IApmb250LXdlaWdodDogYm9sZDsgCnRleHQtYWxpZ246IGNlbnRlcjsgCm1hcmdpbi1ib3R0b206IDBweDsKfQoKI3RpbWVIb2xkZXIgewpiYWNrZ3JvdW5kLWNvbG9yOiAjMTIzYjUyOyAKY29sb3I6IHdoaXRlOyAKZGlzcGxheTogbm9uZTsgCm1hcmdpbi1ib3R0b206IDBweDsKfQoKI3NwZWFraW5nVGltZXsKYmFja2dyb3VuZC1jb2xvcjogIzAwZmZjMzsgCm91dGxpbmU6IG5vbmU7CnNjcm9sbC1iZWhhdmlvcjogc21vb3RoOwpoZWlnaHQ6IDUwcHg7IAp3aWR0aDogMTAwcHg7IApmb250LXdlaWdodDogYm9sZDsgCmNvbG9yOiBibGFjazsgCmZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsKZm9udC1zaXplOiAyMXB4OyAKbWFyZ2luOiAxMHB4OyAKdGV4dC1hbGlnbjogY2VudGVyOyAKYm9yZGVyOiBub25lOyAKfQoKI3NwZWFraW5nVGltZTpob3ZlciB7CmJhY2tncm91bmQtY29sb3I6ICNjMzAwZmY7IAp9Cgojdm9sdW1lLXZpc3VhbGl6ZXItd3JhcHBlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjgzMTsKICBtYXJnaW4tdG9wOiAwcHg7CiAgcGFkZGluZzogMHB4OwogIG1hcmdpbi1ib3R0b206IDBweDsKICB3aWR0aDogODAlOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsgCiAgcGFkZGluZy1ib3R0b206IDEwcHg7Cn0KCiN2b2x1bWUtdmlzdWFsaXplciB7CiAgLS12b2x1bWU6IDAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBoZWlnaHQ6IDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjgzMTsKICBtYXJnaW4tdG9wOiAwcHg7CiAgbWFyZ2luLWJvdHRvbTogMHB4OwogIHdpZHRoOiAxMDAlOwogIGJvcmRlcjogbm9uZTsgCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAKICAKfQoKI3ZvbHVtZS12aXN1YWxpemVyOjpiZWZvcmUgewogICBjb250ZW50OiAnJzsKICAgcG9zaXRpb246IGFic29sdXRlOwogICB0b3A6IDA7CiAgIGJvdHRvbTogMDsKICAgbGVmdDogMDsKICAgd2lkdGg6IHZhcigtLXZvbHVtZSk7CiAgIGJhY2tncm91bmQtY29sb3I6ICNjMzAwZmY7CiAgIHRyYW5zaXRpb246IHdpZHRoIDEwMG1zIGxpbmVhcjsKfQojY29udGFpbmVyIHsKCiAgaGVpZ2h0OiAyMDBweDsKICBtYXJnaW4tYm90dG9tOiAwcHg7CiAgZGlzcGxheTogbm9uZTsgCiAgICBtYXJnaW4tdG9wOiAtMTAwcHg7IAoKICAKfQoKLnZpZGVvLWNvbnRhaW5lciB7CgogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXJnaW4tdG9wOiAwcHg7IAogIGJhY2tncm91bmQtY29sb3I6ICMyMjI4MzE7IAogIHdpZHRoOiA4MCU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAKCn0KCmNhbnZhcyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDA7CiAgdG9wOiAwcHg7IAp9Ci5yZXN1bHQtY29udGFpbmVyIHsKICB3aWR0aDogMTAwJTsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KLnJlc3VsdC1jb250YWluZXIgPiBkaXYgewogIGZvbnQtc2l6ZTogMS4zcmVtOwogIHBhZGRpbmc6IDAuNXJlbTsKICBtYXJnaW46IDVweCAwOwogIGNvbG9yOiB3aGl0ZTsKICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKfQoKdmlkZW8gewogIHdpZHRoOiAxMDAlOwogIG1hcmdpbi1ib3R0b206IC0xNTBweDsgCiAgbWFyZ2luLXRvcDogMHB4Owp9CgojbG9hZGluZ3sgCmhlaWdodDogNTBweDsgCn0KCiNsb2FkaW5nQ29udGFpbmVyIHsKY29sb3I6ICNmZGZkOTY7IAptYXJnaW4tYm90dG9tOiAxNTAlOyAKZm9udC1zaXplOiA1MHB4OyAKfQoKI2luaXRpYWxNZXNzYWdlIHsKZm9udC1zaXplOiAyMHB4Owpjb2xvcjogI2MzMDBmZjsgCn0KCiNmb290ZXIgewpkaXNwbGF5OiBibG9jazsgCiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMDsKICBoZWlnaHQ6IDNyZW07ICAgCiAgdGV4dC1hbGlnbjogbGVmdDsgICAgIAogICAgICAKfQoKI2J1Z3Mgewpjb2xvcjogd2hpdGU7IApmb250LXNpemU6IDEycHg7IAp9Cg=="},{"version":3,"sources":["PublicSpeakingDashboard.vue"],"names":[],"mappings":";AAigfile":"PublicSpeakingDashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"body\" class=\"dashboard\">\n  <p v-if=\"!loading\" id=\"loadingContainer\">Initializing <br><img id=\"loading\" src=\"https://media.giphy.com/media/Ky5F5Rhn1WRVZmvE5W/giphy.gif\"><br><span id=\"initialMessage\">(Make sure your webcam is facing you.)</span></p>\n    <h1 id=\"mainTitle\"> <img id=\"talking\" alt=\"image of voice waves leaving someone's mouth. Attribution: Speak Icon, by Voysla, 'https://www.flaticon.com/free-icons/speak'\" src=\"talking.png\"> {{ msg }} </h1>\n\t\t<p id=\"messageTwo\">\n\t\t\t{{ msg2 }} \n\t\t</p>\n\t\t<p id=\"messageThree\"> \n\t\t\t{{ msg3 }} \n\t\t</p>\n\t\t<span id=\"timeHolder\">Time: </span>\n\t\t<!--<span><button  v-bind:style=\"{ backgroundColor: WPMColor}\" v-if=\"!show\" v-on:click=\"selectWPM\" class=\"optionsButton\" id=\"optionWPM\"> Words Per Minute</button><button v-bind:style=\"{ backgroundColor: textEmotionColor}\" v-if=\"!show\" v-on:click=\"selectTextEmotion\" class=\"optionsButton\" id=\"optionEmotionsText\"> Emotions in Text</button></span>\n\t\t<span><button v-bind:style=\"{ backgroundColor: voiceEmotionColor}\" v-if=\"!show\" v-on:click=\"selectVoiceEmotion\" class=\"optionsButton\" id=\"optionEmotionVoice\"> Emotions in Voice</button><button v-bind:style=\"{ backgroundColor: faceEmotionColor}\" v-if=\"!show\" v-on:click=\"selectFaceEmotion\" class=\"optionsButton\" id=\"optionEmotionsFace\"> Emotions in Face</button></span><br>-->\n\t\t<span><span v-if=\"!show3\" id=\"dropdownWrapper\">\n\t\t<label for=\"speakingTime\" alt=\"Choose Desired Speech Length:\"></label>\n\t\t\t<select name=\"speakingTime\" id=\"speakingTime\">\n\t\t\t\t<option value=\"nope\" selected>Choose Target Speaking Time - (Gives 30 and 15 Sec Warnings Before Selected Time)</option> \n\t\t\t\t<option value=\"60000\">1 Min</option> \n\t\t\t\t<option value=\"180000\">3 Min</option> \n\t\t\t\t<option value=\"300000\">5 Min</option> \n\t\t\t\t<option value=\"600000\">10 Min</option> \n\t\t\t\t<option value=\"900000\">15 Min</option> \n\t\t\t\t<option value=\"1200000\">20 Min</option> \n\t\t\t\t<option value=\"1500000\">25 Min</option> \n\t\t\t\t<option value=\"1800000\">30 Min</option> \n\t\t\t\t<option value=\"2700000\">45 Min</option> \n\t\t\t\t<option value=\"3600000\">60 Min</option> \n\t\t\t</select>\n\t\t</span>\n\t\t<button id=\"begin\" v-if=\"show3\" v-on:click=\"begin(); selectWPM(); selectTextEmotion(); selectVoiceEmotion(); selectFaceEmotion()\">Begin</button><button id=\"start\"  v-if=\"!show3\" v-on:click=\"initiateVoiceControl\">Start</button><button id=\"stop\" v-if=\"!showStop\" v-on:click=\"stopVoiceControl\">Stop</button><button id=\"reset\"  v-if=\"!show3\" v-on:click=\"reset\">Reset</button></span>\n\t\t<!--<br><button id=\"next\" v-if=\"!show\" v-on:click=\"next\">Next</button>--><br>\n\t\t<span id=\"rawData\"></span>\n\t\t<button v-if=\"!showTime\" class=\"title\" id=\"timer\">{{ time }}</button>\n\t\t<span id=\"container\"><div id=\"video-container\" class=\"video-container\"><video id=\"video\" autoplay width=\"150\" height=\"150\"></video></div></span>\n\t\t<span v-if=\"!show3\" id=\"volume-visualizer-wrapper\"><button id=\"volume-visualizer\"></button></span>\n\t\t<ul v-if=\"!show3\" id=\"output\"></ul>\n\t\t<span><button v-if=\"!show3\" id=\"dataShowButton\" v-on:click=\"unhideData\">View Raw Data</button><button v-if=\"!show3\" id=\"dataHideButton\" v-on:click=\"hideData\">Hide Raw Data</button></span>\n\n\t\t\n\n\t\t<!--FEEDBACK SECTION-->\n\t\t<footer v-if=\"show3\" id=\"footer\">\n\t\t\t<section id=\"version\">Version 0.1 (Beta)<br>\n\t\t\t\t\t<div id=\"bugs\">\n\t\t\t\t\t<section>If you find a bug please report it here: <a>URLToGoogleForm</a></section>\n\t\t\t\t\t<br> Known Bugs and Limitations: <br>\n\t\t\t\t\t\t<section>- Current version \"skips\" during voice recognition on mobile (but works correctly on desktop).</section>\n\t\t\t\t\t</div>\n\t\t\t</section>\n\t\t</footer>\n\t\t<!--WPM-->\n\t\t<span v-if=\"!showWPM\" id=\"wpmChart\"></span>\n\t\t<span v-if=\"!showVolume\" id=\"volumeChart\"></span>\n\t\t<span v-if=\"!showFaceEmotion\" id=\"faceEmotionChart\"></span>\n\t\t<span v-if=\"!showTextEmotion\" id=\"textEmotionChart\"></span>\n\t\t\n\t\t\n\t\t\n\t\t<!--<p v-if=\"!showWPM\" id=\"wpm\">{{ wpm }} <br><b>Overall Average Words Per Minute</b></p><br>-->\n  </div>\n</template>\n\n<script>\nimport paralleldots from 'paralleldots'\nimport Plotly from 'plotly.js-dist'\nimport * as faceapi from 'face-api.js'\nexport default {\n  name: 'publicSpeakingDashboard',\n  props: {\n  }, \n  data () {\n\t\treturn {\n\t\t\tmsg: 'Public Speaking Dashboard',\n\t\t\tmsg2: \"An AI-powered tool to help you hone your public speaking skills.\",\n\t\t\tmsg3: \"\",\n\t\t\twordsSpoken: 'START', \n\t\t\toutput: 'Recognized Text',\n\t\t\tworkingOutput: '',\n\t\t\tworkingTime: 0, \n\t\t\tgrabTimeInterval: '', \n\t\t\tregisterWPMInterval: '',\n\t\t\tgetEmotionStatsInterval: '',\n\t\t\tinitialTime: 0,  \n\t\t\ttime: \"00:00\",\n\t\t\ttimeElapsed: 0, \n\t\t\ttimeDifference: 0, \n\t\t\twordCount: 0,\n\t\t\ttotalWords: 0, \n\t\t\twordCountDividedByTime: 0,\n\t\t\tstop: false, \n\t\t\twpm: 0,\n\t\t\tanger: 0, \n\t\t\tfear: 0, \n\t\t\texcitement: 0, \n\t\t\tboredom: 0, \n\t\t\tsadness: 0, \n\t\t\thappiness: 0, \n\t\t\tcontinuous: true, \n\t\t\tshow: true, \n\t\t\tshow2: true, \n\t\t\tshow3: true,\n\t\t\tshowStop: true,  \n\t\t\tloading: true,\n\t\t\tshow4: true,\n\t\t\tshowWPM: true,\n\t\t\tshowTextEmotion: true,\n\t\t\tshowTime: true,\n\t\t\tshowData: true,   \n\t\t\tWPMSelected: false,\n\t\t\tWPMColor: '#CBC3E3',  \t\t\t \n\t\t\ttextEmotionSelected: false, \n\t\t\ttextEmotionColor: '#CBC3E3', \n\t\t\tshowVoiceEmotion: true, \n\t\t\tvoiceEmotionSelected: false, \n\t\t\tvoiceEmotionColor: '#CBC3E3', \n\t\t\tshowFaceEmotion: true, \n\t\t\tfaceEmotionSelected: false, \n\t\t\tfaceEmotionColor: '#CBC3E3', \n\t\t\ttextEmotionData: '', \n\t\t\toverallDataObject: '', \n\t\t\tcurrentDataObject: '', \n\t\t\tdataNamer: 0,\n\t\t\ttime1: true,\n\t\t\ttime2: false, \n\t\t\tplaceHolderForTimeCheck: 0,\n\t\t\tvolumeCallback: null, \n\t\t\tvolumeInterval: null, \n\t\t\tvolumeValue: 0, \n\t\t\tvolumeNumber: 0, \n\t\t\tshowVolume: true, \n\t\t\tfaceEmotionState: '', \n\t\t\tanalyzeFaceInterval: '',\n\t\t\tanalyzingFace: true,  \n\t\t\tfaceAngry: 0,\n\t\t\tfaceDisgusted: 0, \n\t\t\tfaceFearful: 0, \n\t\t\tfaceHappy: 0, \n\t\t\tfaceNeutral: 0,\n\t\t\tfaceSad: 0, \n\t\t\tfaceSurprised: 0 \n\t\t}\n\t},\n\t\n\tcreated: function () {\n\tconsole.log(\"Landing page loaded\")\n\t}, \n\n\tmethods: {\n\t\n\t\tbegin: function () {\n\t\t\t//initiate speech recognition and ask for microphone permission\n\t\t\tthis.analyzeFace()\n\t\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\t\tlet recognition = new window.SpeechRecognition();\n\t\t\trecognition.start()\n\t\t\tthis.show = false\n\t\t\tthis.show3 = false\n\t\t\tthis.msg2 = ''\n\t\t\tthis.msg3 = 'Choose a desired speech length. Click start. Then, click stop when finished.'\n\t\t\tconsole.log(\"Dashboard page loaded\")\n\t\t},\n\t\t\n\t\tstartVolumeMeter: function () {\n\t\t\t(async () => {\n\t\t\t\tconst volumeVisualizer = document.getElementById('volume-visualizer');\n\t\t\t\t// Initialize\n\t\t\t\ttry {\n\t\t\t\t\tconst audioStream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\t\t\taudio: {\n\t\t\t\t\t\t\techoCancellation: true\n\t\t\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst audioContext = new AudioContext();\n\t\t\tconst audioSource = audioContext.createMediaStreamSource(audioStream);\n\t\t\tconst analyser = audioContext.createAnalyser();\n\t\t\tanalyser.fftSize = 512;\n\t\t\tanalyser.minDecibels = -127;\n\t\t\tanalyser.maxDecibels = 0;\n\t\t\tanalyser.smoothingTimeConstant = 0.4;\n\t\t\taudioSource.connect(analyser);\n\t\t\tconst volumes = new Uint8Array(analyser.frequencyBinCount);\n\t\t\tthis.volumeCallback = () => {\n\t\t\t\tanalyser.getByteFrequencyData(volumes);\n\t\t\t\tlet volumeSum = 0;\n\t\t\t\t\tfor(const volume of volumes)\n\t\t\t\t\t\tvolumeSum += volume;\n\t\t\t\t\t\tconst averageVolume = volumeSum / volumes.length;\n\t\t\t\t\t\t// Value range: 127 = analyser.maxDecibels - analyser.minDecibels;\n\t\t\t\t\t\tvolumeVisualizer.style.setProperty('--volume', (averageVolume * 100 / 127) + '%');\n\t\t\t\t\t\tthis.volumeNumber = averageVolume\n\t\t\t\t\t\tthis.showVolume = false\n\t\t\t};\n\t\t\t} catch(e) {\n\t\t\t\tconsole.error('Failed to initialize volume visualizer, simulating instead...', e);\n\t\t\t\tlet lastVolume = 50;\n\t\t\tthis.volumeCallback = () => {\n\t\t\t\tconst volume = Math.min(Math.max(Math.random() * 100, 0.8 * lastVolume), 1.2 * lastVolume);\n\t\t\t\tlastVolume = volume;\n\t\t\t\tvolumeVisualizer.style.setProperty('--volume', volume + '%');\n\t\t\t};\n\t\t\t}\n\t\t\t// Use\n\n\t\t\tif(this.volumeCallback !== null && this.volumeInterval === null)\n\t\t\t\tthis.volumeInterval = setInterval(this.volumeCallback, 100);\n\n\t\t\t})();\n\t\t\t},\n\t\t\n\t\tsetVolume: function () {\n\t\t\tthis.volumeValue = Math.round(this.volumeNumber)\n\t\t}, \t\n\n\t\tselectWPM: function () {\n\t\t\t\n\t\t\tif (this.WPMSelected == false) {\n\t\t\t\tthis.msg2 = \"\"\n\t\t\t\tthis.WPMSelected = true\n\t\t\t\tthis.WPMColor = '#f48d79'\n\t\t\t\tif (this.WPMSelected == true)\t {\n\t\t\t\tthis.showWPM = false\n\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\telse {\n\t\t\t\tthis.WPMSelected = false\n\t\t\t\tthis.WPMColor = '#CBC3E3'\n\t\t\t\tif (this.WPMSelected == false)\t {\n\t\t\t\tthis.showWPM = true\n\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tselectTextEmotion: function () {\n\t\t\n\t\t\tif (this.textEmotionSelected == false) {\n\t\t\t\tthis.msg2 = \"\"\n\t\t\t\tthis.textEmotionSelected = true\n\t\t\t\tthis.textEmotionColor = '#f48d79'\n\t\t\t\tif (this.textEmotionSelected == true)\t {\n\t\t\t\tthis.showTextEmotion = false\n\t\t\t}\t\n\t\t\t}\n\t\t\t\n\t\t\telse {\n\t\t\t\tthis.textEmotionSelected = false\n\t\t\t\tthis.textEmotionColor = '#CBC3E3'\n\t\t\t\tif (this.textEmotionSelected == false)\t {\n\t\t\t\tthis.showTextEmotion = true\n\t\t\t}\t\n\t\t\t}\n\t\t},\n\t\t\n\t\tselectVoiceEmotion: function () {\n\t\t\n\t\t\tif (this.voiceEmotionSelected == false) {\n\t\t\t\tthis.msg2 = \"\"\n\t\t\t\tthis.voiceEmotionSelected = true\n\t\t\t\tthis.voiceEmotionColor = '#f48d79'\n\t\t\t\tif (this.voiceEmotionSelected == true)\t {\n\t\t\t\tthis.showVoiceEmotion = false\n\t\t\t}\t\n\t\t\t}\n\t\t\t\n\t\t\telse {\n\t\t\t\tthis.voiceEmotionSelected = false\n\t\t\t\tthis.voiceEmotionColor = '#CBC3E3'\n\t\t\t\tif (this.voiceEmotionSelected == false)\t {\n\t\t\t\tthis.showVoiceEmotion = true\n\t\t\t}\t\n\t\t\t}\n\t\t},\n\t\t\n\t\tselectFaceEmotion: function () {\n\t\t\n\t\t\tif (this.faceEmotionSelected == false) {\n\t\t\t\tthis.msg2 = \"\"\n\t\t\t\tthis.faceEmotionSelected = true\n\t\t\t\tthis.faceEmotionColor = '#f48d79'\n\t\t\t\tif (this.faceEmotionSelected == true)\t {\n\t\t\t\tthis.showFaceEmotion = false\n\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\telse {\n\t\t\t\tthis.faceEmotionSelected = false\n\t\t\t\tthis.faceEmotionColor = '#CBC3E3'\n\t\t\t\tif (this.faceEmotionSelected == false)\t {\n\t\t\t\tthis.showFaceEmotion = true\n\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tinitiateVoiceControl: function () {\n\t\t//start listening for words and making a transcript of detected words\n\t\t\tconsole.log('Voice recognition initiated')\n\t\t\twindow.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\n\t\t\tlet finalTranscript = '';\n\t\t\tlet recognition = new window.SpeechRecognition();\n\t\t\trecognition.interimResults = true; \n\t\t\trecognition.maxAlternatives = 10;\n\t\t\trecognition.continuous = this.continuous;\n\t\t\trecognition.onresult = (event) => {\n\t\t\t\tlet interimTranscript = '';\n\t\t\t\tfor (let i = event.resultIndex, len = event.results.length; i < len; i++) {\n\t\t\t\t\tlet transcript = event.results[i][0].transcript;\n\t\t\t\t\tif (event.results[i].isFinal) {\n\t\t\t\t\t\tfinalTranscript += transcript;\n\t\t\t\t\t\tif (this.workingTime) {\n\t\t\t\t\t\tthis.workingOutput = transcript\n\t\t\t\t\t\tvar node = document.createElement('li');\n\t\t\t\t\t\tnode.appendChild(document.createTextNode(\" \" + this.workingTime + ': ' + this.workingOutput));\n\t\t\t\t\t\tdocument.querySelector('ul').appendChild(node);\n\t\t\t\t\t\tvar elem = document.getElementById('output');\n\t\t\t\t\t\telem.scrollTop = elem.scrollHeight;\n\t\t\t\t\t\tconsole.log(\"Detected speech:\" + this.workingOutput)\n\t\t\t\t\t\tthis.renderData()\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\tinterimTranscript += transcript;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\tthis.wordsSpoken = finalTranscript\n\t\t\t\tthis.output =  this.wordsSpoken += interimTranscript\n\t\t\t\tthis.wordCount = this.countWords(this.output)\n\t\t\t\tthis.totalWords = this.wordCount\n\t\t},\n\t\t\trecognition.start()\n\t\t\t\n\t\t\t\tif ((this.textEmotionSelected == true || this.WPMSelected == true) || (this.voiceEmotionSelected == true || this.faceEmotionSelected == true))\t {\n\t\t\t\t\tthis.msg3 = \"\"\n\t\t\t\t\tif (this.stop == false) {\n\t\t\t\t\t\tthis.showTime = false\n\t\t\t\t\t\tthis.initialTime = Date.now();\n\t\t\t\t\t\tthis.grabTimeInterval = window.setInterval(this.grabTime, 1000)\n\t\t\t\t\t\tthis.startVolumeMeter()\n\t\t\t\t\t\tdocument.getElementById(\"container\").style.display = \"inline\";\n\t\t\t\t\t\tthis.showStop = false\n\t\t\t\t\t\tthis.visualizeData()\n\t\t\t\t\t\tconsole.log(\"app started\")\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if (this.analyzingFace == false){this.analyzeFace()}\n\t\t\t\t\t} \n\t\t\t\t\tif (this.stop == true) {\n\t\t\t\t\t\tclearInterval(this.grabTimeInterval)\n\t\t\t\t\t\tthis.showTime = false\n\t\t\t\t\t\tthis.continuous = true\n\t\t\t\t\t\tconsole.log(\"app stopped\")\n\t\t\t\t\t\trecognition.stop()\n\t\t\t\t\t\tthis.stop = false\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.msg2 = 'No input data selected. Try selecting words per minute or another parameter.'\n\t\t\t\t\t}\n\n\t\t},\n\t\t\n\t\tanalyzeFace: function () {\n\t\t\tconst video = document.querySelector(\"video\");\n\t\t\tthis.loading = false\n\t\t\tconst videoContainer = document.getElementById(\"video-container\");\n\t\t\t\n\t\t\tPromise.all([\n\t\t\t\tfaceapi.nets.tinyFaceDetector.loadFromUri(\"./models\"),\n\t\t\t\tfaceapi.nets.faceLandmark68Net.loadFromUri(\"./models\"),\n\t\t\t\tfaceapi.nets.faceRecognitionNet.loadFromUri(\"./models\"),\n\t\t\t\tfaceapi.nets.faceExpressionNet.loadFromUri(\"./models\")\n\t\t\t]).then(startVideo);\n\n\t\t\tfunction startVideo() {\n\t\t\tvar constraints = { audio: false, video: true }; \n\n\t\t\tnavigator.mediaDevices.getUserMedia(constraints)\n\t\t\t\t.then(function(mediaStream) {\n\t\t\t\tvideo.srcObject = mediaStream;\n\t\t\t})\n\t\t\t\t.catch(function(err) { console.log(err.name + \": \" + err.message); });\n\t\t\t}\n\n\t\t\tvideo.addEventListener(\"playing\", () => {\n\t\t\t\tconsole.log(\"Initializing face recognition\");\n\t\t\t\tconst canvas = faceapi.createCanvasFromMedia(video);\n\t\t\t\tcanvas.willReadFrequently = true;\n\t\t\t\tvideoContainer.appendChild(canvas);\n\n\t\t\t\tconst displaySize = { width: video.width, height: video.height };\n\t\t\t\tfaceapi.matchDimensions(canvas, displaySize);\n\n\t\t\t\tthis.analyzeFaceInterval = window.setInterval(async () => {\n\t\t\t\tconst detections = await faceapi\n\t\t\t\t\t.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions())\n\t\t\t\t\t\t.withFaceLandmarks()\n\t\t\t\t\t\t.withFaceExpressions()\n\n\t\t\t\tconst resizedDetections = faceapi.resizeResults(detections, displaySize);\n\n\t\t\t\tcanvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n\n\t\t\t\tconst resizedResults = faceapi.resizeResults(detections, displaySize)\n\t\t\t\tfaceapi.draw.drawDetections(canvas, resizedDetections);\n\t\t\t\t\n\t\t\t\tconst minProbability = 0.05\n\t\t\t\tfaceapi.draw.drawFaceExpressions(canvas, resizedResults, minProbability)\n\t\t\t\n\t\t\t\tif (resizedDetections && Object.keys(resizedDetections).length > 0) {\n\t\t\t\t\tconst expressions = resizedDetections.expressions;\n\t\t\t\t\tconst maxValue = Math.max(...Object.values(expressions));\n\t\t\t\t\tconst emotion = Object.keys(expressions).filter(\n\t\t\t\t\titem => expressions[item] === maxValue\n\t\t\t\t);\n\t\t\t\n\t\t\t\tthis.faceEmotionState = '\"' + `${emotion[0]}` + '\"'\n\t\t\t\t\n\t\t\t\tif (this.loading == false) {\n\t\t\t\t\tthis.loading = true\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t\t\tthis.faceAngry = Math.round(detections.expressions.angry * 100)\n\t\t\t\t\tthis.faceDisgusted = Math.round(detections.expressions.disgusted * 100)\n\t\t\t\t\tthis.faceFearful = Math.round(detections.expressions.fearful * 100)\n\t\t\t\t\tthis.faceHappy = Math.round(detections.expressions.happy * 100)\n\t\t\t\t\tthis.faceNeutral = Math.round(detections.expressions.neutral * 100)\n\t\t\t\t\tthis.faceSad = Math.round(detections.expressions.sad * 100)\n\t\t\t\t\tthis.faceSurprised = Math.round(detections.expressions.surprised * 100)\n\t\t\t\t\n\t\t\t}, 500);\n\t\t\t});\n\t\t},\n\t\n\t\tgrabTime: function () {\n\t\t//keep  of time in both milliseconds as well as minutes and seconds\n\t\t\t\n\t\t\tif (this.time1 == true) {\n\t\t\tthis.timeDifference = Date.now() - this.initialTime;\n\t\t\tthis.dataNamer = this.timeDifference\n\t\t\tvar div = document.getElementById('timeHolder');\n\t\t\tdiv.innerHTML = this.dataNamer\n\t\t\t}\n\t\t\t\n\t\t\tif (this.time1 == false){\n\t\t\t\tthis.timeDifference = Date.now() - this.initialTime;\n\t\t\t\tvar middleTime = parseInt(document.getElementById(\"timeHolder\").innerHTML);\n\t\t\t\tthis.timeDifference = this.timeDifference + middleTime\n\t\t\t\tthis.time2 = true\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = convertTime(this.timeDifference);\n\t\t\tdocument.getElementById('timer').innerHTML = '' + formatted;\n\t\t\tthis.workingTime = formatted; \n\t\t\tconsole.log(formatted)\n\t\t\t\tthis.timeElapsed = this.timeDifference\n\t\t\t\tthis.placeHolderForTimeCheck = this.timeDifference\n\t\t\t\tvar selectedTime = document.getElementById(\"speakingTime\").value;\n\t\t\t\tvar selectedTimeFifteen = selectedTime - 15000\n\t\t\t\tvar selectedTimeThirty = selectedTime - 30000\n\t\t\t\tvar element = document.getElementById(\"timer\");\n\t\t\tif (this.placeHolderForTimeCheck >= selectedTimeThirty) {\n\t\t\t\telement.style.backgroundColor = \"green\";\n\t\t\t}\n\t\t\tif (this.placeHolderForTimeCheck >= selectedTimeFifteen) {\n\t\t\t\telement.style.backgroundColor = \"yellow\";\n\t\t\t}\n\t\t\tif (this.placeHolderForTimeCheck >= selectedTime) {\n\t\t\t\telement.style.backgroundColor = \"red\";\n\t\t\t}\n\t\t\t\n\t\t\tfunction convertTime(miliseconds) {\n\t\t\t\tvar totalSeconds = Math.floor(miliseconds/1000);\n\t\t\t\tvar minutes = Math.floor(totalSeconds/60);\n\t\t\t\tvar seconds = totalSeconds - minutes * 60;\n\t\t\t\tif (seconds < 10) {\n\t\t\t\tseconds = \"0\" + seconds \n\t\t\t\t}\n\t\t\t\tif (minutes < 10) {\n\t\t\t\tminutes = \"0\" + minutes \n\t\t\t\t}\n\t\t\t\treturn minutes + ':' + seconds;\n\t\t\t}\n\t\t},\n\t\t\n\t\tcountWords: function (str){\n\t\t//count how many words are in the transcript of detected words\n\t\t\tconst arr = str.split(' ');\n\t\t\treturn arr.filter(word => word !== '').length;\n\t\t}, \n\t\t\n\t\tregisterWPM: function () {\n\t\t//calculate number of words per minute--at one second intervals\n\t\t\tthis.wpm = Math.round(this.wordCount/(this.timeElapsed/1000) * 60) \n\t\t},\n\t\t\n\t\tgetEmotionStats: function () {\n\t\t//send transcript data to be evaluated as per emotional content\n\t\t\tconst pd = require('paralleldots' || paralleldots)\n\t\t\tpd.apiKey = \"hL7rOIhghKLZtrI6w04cFjxVvAOHQ7BiNhjMLAVnMPw\";\n\t\t\tpd.emotion(this.workingOutput,\"en\")\n\t\t\t.then((response) => {\n\t\t\t\tlet obj = JSON.parse(response)\n\t\t\t\tthis.textEmotionData = response.slice(1)\n\t\t\t\tthis.anger = Math.round(obj.emotion.Angry * 100) \n\t\t\t\tthis.fear = Math.round(obj.emotion.Fear * 100) \n\t\t\t\tthis.excitement = Math.round(obj.emotion.Excited * 100)\n\t\t\t\tthis.boredom = Math.round(obj.emotion.Bored * 100)\n\t\t\t\tthis.sadness = Math.round(obj.emotion.Sad * 100)\n\t\t\t\tthis.happiness = Math.round(obj.emotion.Happy * 100)\n\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t\t\n\t\t},  \n\t\t\n\t\tstopVoiceControl: function () {\n\t\t//reset speech recognition so it can stop and clear original timers\n\t\t\tthis.continuous = false\n\t\t\tthis.stop = true\n\t\t\tthis.time1 = false\n\t\t\tif (this.time2 == true) {\n\t\t\t\tthis.dataNamer = this.timeDifference\n\t\t\t\tvar div2 = document.getElementById('timeHolder');\n\t\t\t\tdiv2.innerHTML = this.dataNamer \n\t\t\t}\n\t\t\tif(this.volumeInterval !== null) {\n\t\t\t\tclearInterval(this.volumeInterval);\n\t\t\t\tthis.volumeInterval = null;\n\t\t\t}\n\t\t\tthis.visualizeData()\n\t\t\tthis.initiateVoiceControl()\n\t\t\tclearInterval(this.grabTimeInterval)\n\t\t\t//clearInterval(this.analyzeFaceInterval)\n\t\t\t//this.analyzingFace = false\n\t\t}, \n\t\n\t\treset: function () {\n\t\t\tlocation.reload()\n\t\t}, \n\t\t\n\t\tunhideData: function () {\n\t\t\tdocument.getElementById(\"rawData\").style.display=\"inline-block\"\n\t\t}, \n\t\t\n\t\thideData: function () {\n\t\t\tdocument.getElementById(\"rawData\").style.display=\"none\"\n\t\t},\n\t\t\n\t\trenderData: function() {\n\t\t\n\t\t\tconst promise1 = new Promise((resolve, reject) => {\n\t\t\t\tthis.setVolume()\n\t\t\t\tthis.getEmotionStats()\n\t\t\t\tthis.registerWPM()\n\t\t\t\tresolve('Data rendered!');\n\t\t\t\treject('Data render failed')\n\t\t\t});\n\n\t\t\tpromise1.then(() => {\n\t\t\t\tthis.constructJSON()\n\t\t\t\tthis.visualizeData()\n\t\t\t\tconsole.log(\"JSON and charts constructed\");\n\t\t\t});\n\t\t}, \n\t\t\n\t\tconstructJSON: function() {\t\t\n\t\t\tthis.currentDataObject = '{\"time\":' + '\"' + this.workingTime + '\"' + \",\" + '\"wpm\":' + '\"' + this.wpm + '\"' + \",\" + '\"content\":' + '\"' + this.workingOutput + '\"' + \",\" + '\"Angry\":' + this.anger + \",\" + '\"Fear\":' + this.fear + \",\" + '\"Excited\":' + this.excitement + \",\" + '\"Bored\":' + this.boredom + \",\" + '\"Sad\":' + this.sadness + \",\" + '\"Happy\":' + this.happiness + \",\" + '\"volume\":' + this.volumeValue + \",\" + '\"faceAnger\":' + this.faceAngry + \",\" + '\"faceDisgust\":' + this.faceDisgusted + \",\" + '\"faceFear\":' + this.faceFearful + \",\" + '\"faceHappiness\":' + this.faceHappy + \",\" + '\"faceNeutral\":' + this.faceNeutral + \",\" + '\"faceSadness\":' + this.faceSad + \",\" + '\"faceSurprise\":' + this.faceSurprised + \"},\"\n\t\t\tvar div = document.getElementById('rawData');\n\t\t\tdiv.innerHTML += this.currentDataObject;\n\t\t\tthis.overallDataObject = document.getElementById(\"rawData\").innerHTML\n\t\t},  \n\t\t\n\t\tvisualizeData: function () {\n\t\t\t\tvar overallRawData = document.getElementById(\"rawData\").innerHTML\n\t\t\t\tvar overallSlicedDataArray = \"[\" + overallRawData.slice(0, -1) + \"]\"\n\t\t\t\tvar data = JSON.parse(overallSlicedDataArray)\n\t\t\t\n\t\t\t\n\t\t\t//Words Per Minute\n\t\t\tif (this.showWPM == false) {\n\t\t\t\t\n\t\t\t\tlet wordsPerMinute = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Words Per Minute', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#f48d79',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdata.forEach(function(val) {\n\t\t\t\twordsPerMinute.x.push(val[\"time\"]);\n\t\t\t\twordsPerMinute.y.push(val[\"wpm\"]);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar layout = {\n\t\t\t\tpaper_bgcolor: \"#222831\",\n\t\t\t\tplot_bgcolor: \"#222831\",\n\t\t\t\ttitle: {\n\t\t\t\t\ttext:'Rate of Speech',\n\t\t\t\t\tfont: {\n\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\tsize: 20, \n\t\t\t\t\tcolor: '#71c68b', \n\t\t\t\t},\n\t\t\t\t\txref: 'paper',\n\t\t\t\t\tautomargin: true,\n\t\t\t\t\tx: 0.5,\n\t\t\t\t\txanchor: 'center', \n\t\t\t\t\ty: 0.88, \n\t\t\t\t\tyanchor: 'top'\n\t\t\t\t},\n\t\t\t\tautosize: true,\n\t\t\t\t\txaxis: {\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 18,\n\t\t\t\t\t\t\tcolor : '#71c68b'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#36454f',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\ttext: 'Time',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#71c68b',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tyaxis: {\n\t\t\t\t\t\tmargin: {\n\t\t\t\t\t\t\tautoexpand: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tautomargin: true,\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 18,\n\t\t\t\t\t\t\tcolor : '#71c68b'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#36454f',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Words Per Minute',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#71c68b' \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar WPMChart = document.getElementById('wpmChart');\n\t\t\t\tPlotly.newPlot(WPMChart, [wordsPerMinute], layout);\n\t\t\t}\n\t\t\t\n\t\t\t//Volume\n\t\t\tif (this.showVolume == false) {\n\t\t\t\t\n\t\t\t\tlet volume = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Volume', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#40D0E0',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdata.forEach(function(val) {\n\t\t\t\tvolume.x.push(val[\"time\"]);\n\t\t\t\tvolume.y.push(val[\"volume\"]);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar layout3 = {\n\t\t\t\tpaper_bgcolor: \"#222831\",\n\t\t\t\tplot_bgcolor: \"#222831\",\n\t\t\t\ttitle: {\n\t\t\t\t\ttext:'Voice Projection',\n\t\t\t\t\tfont: {\n\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\tsize: 20, \n\t\t\t\t\tcolor: '#c300ff', \n\t\t\t\t},\n\t\t\t\t\txref: 'paper',\n\t\t\t\t\tautomargin: true,\n\t\t\t\t\tx: 0.5,\n\t\t\t\t\txanchor: 'center', \n\t\t\t\t\ty: 0.88, \n\t\t\t\t\tyanchor: 'top'\n\t\t\t\t},\n\t\t\t\tautosize: true,\n\t\t\t\t\txaxis: {\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 18,\n\t\t\t\t\t\t\tcolor : '#c300ff'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#c300ff',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\ttext: 'Time',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#c300ff',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tyaxis: {\n\t\t\t\t\t\tmargin: {\n\t\t\t\t\t\t\tautoexpand: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tautomargin: true,\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 18,\n\t\t\t\t\t\t\tcolor : '#c300ff'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#c300ff',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Volume',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#c300ff' \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar volumeChart = document.getElementById('volumeChart');\n\t\t\t\tPlotly.newPlot(volumeChart, [volume], layout3);\n\t\t\t}\n\t\t\t\n\t\t\t//Emotions in Face\n\t\t\tif (this.faceEmotionSelected == true) {\n\t\t\t\t\n\t\t\t\tlet Angry = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Anger', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#ff6961',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Fearful = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Fear', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#fdfd96',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Excited = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Surprise', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#ffb347',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Bored = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Neutral', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#cfcfc4',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Sad = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Sadness', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#85A1F2',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Happy = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Happiness', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#77dd77',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdata.forEach(function(val) {\n\t\t\t\tAngry.x.push(val[\"time\"]);\n\t\t\t\tAngry.y.push(val[\"faceAnger\"]);\n\t\t\t\tFearful.x.push(val[\"time\"]);\n\t\t\t\tFearful.y.push(val[\"faceFear\"]);\n\t\t\t\tExcited.x.push(val[\"time\"]);\n\t\t\t\tExcited.y.push(val[\"faceSurprise\"]);\n\t\t\t\tBored.x.push(val[\"time\"]);\n\t\t\t\tBored.y.push(val[\"faceNeutral\"]);\n\t\t\t\tSad.x.push(val[\"time\"]);\n\t\t\t\tSad.y.push(val[\"faceSadness\"]);\n\t\t\t\tHappy.x.push(val[\"time\"]);\n\t\t\t\tHappy.y.push(val[\"faceHappiness\"]);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar layout4 = {\n\t\t\t\tpaper_bgcolor: \"#222831\",\n\t\t\t\tplot_bgcolor: \"#222831\",\n\t\t\t\ttitle: {\n\t\t\t\t\ttext:'  Expressions in Face',\n\t\t\t\t\tfont: {\n\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\tsize: 20, \n\t\t\t\t\tcolor: '#f48d79', \n\t\t\t\t},\n\t\t\t\t\txref: 'paper',\n\t\t\t\t\tautomargin: true,\n\t\t\t\t\tx: 0.6,\n\t\t\t\t\txanchor: 'center', \n\t\t\t\t\ty: 0.88, \n\t\t\t\t\tyanchor: 'top'\n\t\t\t\t},\n\t\t\t\tautosize: true,\n\t\t\t\t\txaxis: {\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 16,\n\t\t\t\t\t\t\tcolor : '#f48d79'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#f48d79',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\ttext: 'Time',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#f48d79',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tyaxis: {\n\t\t\t\t\t\tmargin: {\n\t\t\t\t\t\t\tautoexpand: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tautomargin: true,\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 16,\n\t\t\t\t\t\t\tcolor : '#f48d79'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#f48d79',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Expressions',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#f48d79' \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar FACEEMOTIONChart = document.getElementById('faceEmotionChart');\n\t\t\t\tPlotly.newPlot(FACEEMOTIONChart, [Angry, Fearful, Excited, Bored, Sad, Happy], layout4);\n\t\t\t}\n\t\t\t\n\t\t\t//Emotions in Text\n\t\t\tif (this.textEmotionSelected == true) {\n\t\t\t\t\n\t\t\t\tlet Anger = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Anger', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#ff6961',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Fear = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Fear', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#fdfd96',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Excitement = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Excitement', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#ffb347',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Boredom = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Boredom', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#cfcfc4',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Sadness = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Sadness', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#85A1F2',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tlet Happiness = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tmode: \"lines\",\n\t\t\t\t\tname: 'Happiness', \n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: '#77dd77',\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdata.forEach(function(val) {\n\t\t\t\tAnger.x.push(val[\"time\"]);\n\t\t\t\tAnger.y.push(val[\"Angry\"]);\n\t\t\t\tFear.x.push(val[\"time\"]);\n\t\t\t\tFear.y.push(val[\"Fear\"]);\n\t\t\t\tExcitement.x.push(val[\"time\"]);\n\t\t\t\tExcitement.y.push(val[\"Excited\"]);\n\t\t\t\tBoredom.x.push(val[\"time\"]);\n\t\t\t\tBoredom.y.push(val[\"Bored\"]);\n\t\t\t\tSadness.x.push(val[\"time\"]);\n\t\t\t\tSadness.y.push(val[\"Sad\"]);\n\t\t\t\tHappiness.x.push(val[\"time\"]);\n\t\t\t\tHappiness.y.push(val[\"Happy\"]);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar layout2 = {\n\t\t\t\tpaper_bgcolor: \"#222831\",\n\t\t\t\tplot_bgcolor: \"#222831\",\n\t\t\t\ttitle: {\n\t\t\t\t\ttext:'  Emotions in Words Spoken',\n\t\t\t\t\tfont: {\n\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\tsize: 20, \n\t\t\t\t\tcolor: '#fdfd96', \n\t\t\t\t},\n\t\t\t\t\txref: 'paper',\n\t\t\t\t\tautomargin: true,\n\t\t\t\t\tx: 0.6,\n\t\t\t\t\txanchor: 'center', \n\t\t\t\t\ty: 0.88, \n\t\t\t\t\tyanchor: 'top'\n\t\t\t\t},\n\t\t\t\tautosize: true,\n\t\t\t\t\txaxis: {\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 16,\n\t\t\t\t\t\t\tcolor : '#fdfd96'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#36454f',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\ttext: 'Time',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#fdfd96',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tyaxis: {\n\t\t\t\t\t\tmargin: {\n\t\t\t\t\t\t\tautoexpand: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tautomargin: true,\n\t\t\t\t\t\ttickfont : {\n\t\t\t\t\t\t\tsize : 16,\n\t\t\t\t\t\t\tcolor : '#fdfd96'\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttickcolor: '#fdfd96',\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\ttext: 'Emotions',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\t\tcolor: '#fdfd96' \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tvar TEXTEMOTIONChart = document.getElementById('textEmotionChart');\n\t\t\t\tPlotly.newPlot(TEXTEMOTIONChart, [Anger, Fear, Excitement, Boredom, Sadness, Happiness], layout2);\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t}//\n}//\t\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n@import url('https://fonts.cdnfonts.com/css/lcd');\n#textEmotion, #faceEmotion, #voiceEmotion, #wpm {\ndisplay: inline-block; \n}\ndiv {\nbackground-color: none; \ncolor: #71c68b; \n\n}\n.chartWindow {\nposition: relative;\ndisplay: inline-block;\nwidth: 80%;  \n\n}\n.optionsButton  {\nheight: 50px;\nwidth: 75px; \npadding: 12px; \nfont-size: 10px; \nmargin: 5px;\nborder: none; \nfont-weight: bold; \ncolor: black; \nfont-family: Arial, sans-serif;\n}\n\n.title {\ncolor: white; \n}\n\n#messageTwo {\ncolor: #f48d79; \nfont-size: 25px; \n}\n\n#messageThree {\ncolor: white; \nfont-size: 25px; \n}\n\n#begin {\nbackground-color: #c300ff;\nborder: none; \nheight: 50px; \nwidth: 100px; \nfont-weight: bold; \ncolor: black; \nfont-family: Arial, sans-serif;\nfont-size: 20px; \nmargin-top: 40px; \nmargin-bottom: -20px; \n}\n\n#begin:hover {\nbackground-color: #fdfd96; \n}\n\n#start {\nbackground-color: #CBC3E3; \nborder: none; \nheight: 50px; \nwidth: 100px; \nfont-weight: bold; \ncolor: black; \nfont-family: Arial, sans-serif;\nfont-size: 20px; \nmargin: 10px; \n}\n\n#start:hover {\nbackground-color: lightgreen; \n}\n\n#stop {\nbackground-color: #CBC3E3; \nborder: none; \nheight: 50px; \nwidth: 100px; \nfont-weight: bold; \ncolor: black; \nfont-family: Arial, sans-serif;\nfont-size: 20px; \nmargin: 10px; \n}\n\n#stop:hover {\nbackground-color: #ff726f; \n}\n\n#reset {\nbackground-color: #CBC3E3; \nborder: none; \nheight: 50px; \nwidth: 100px; \nfont-weight: bold; \ncolor: black; \nfont-family: Arial, sans-serif;\nfont-size: 20px; \nmargin: 10px; \n}\n\n#reset:hover {\nbackground-color: lightyellow; \n}\n\n#next {\nbackground-color: #7766c6; \nborder: none; \nheight: 50px; \nwidth: 100px; \nfont-weight: bold; \ncolor: black; \nfont-family: Arial, sans-serif;\nfont-size: 20px; \nmargin-top: 40px; \nmargin-bottom: -20px; \n}\n\n#next:hover {\nbackground-color: #FFC300; \n}\n\n#output {\nmargin: auto; \ncolor: #f48d79; \nbackground-color: #222831; \nwidth: 80%;  \ntext-align: left; \noverflow: scroll; \nheight: 170px; \nfont-size: 25px;\nmargin-top: 0px;\nmargin-bottom: 0px\n}\n\n#wpmChart {\noverflow: auto; \nwidth: 80%; \ndisplay: inline-block;\nmargin-top: 3px;\nmargin-bottom: 0px; \n}\n\n#volumeChart {\noverflow: auto; \nwidth: 80%; \ndisplay: inline-block;\nmargin-top: -3px; \n}\n\n#textEmotionChart {\noverflow: auto; \nwidth: 80%; \ndisplay: inline-block;\nmargin-top: -3px; \n}\n\n#faceEmotionChart {\noverflow: auto; \nwidth: 80%; \ndisplay: inline-block;\nmargin-top: -3px; \n}\n\n#rawData {\ndisplay: none; \nmargin: auto; \ncolor: lawngreen; \nbackground-color: #222831; \nwidth: 80%;  \ntext-align: left; \noverflow: scroll; \nheight: 100px; \nfont-size: 25px;\nmargin: 0px;\n}\n\n#dataHideButton {\nmargin: auto; \ncolor:  #222831; \nbackground-color: #222831; \nwidth: 40%;  \ntext-align: center; \nheight: 30px; \nfont-size: 10px;\nmargin: 0px;\nborder: none; \n}\n\n#dataShowButton {\nmargin: auto; \ncolor:  #222831; \nbackground-color: #222831; \nwidth: 40%;  \ntext-align: center; \nheight: 30px; \nfont-size: 10px;\nmargin: 0px;\nborder: none; \n}\n\nh1 {\nfont-size: 50px;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0px;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n#talking {\nheight: 100px; \nmargin-bottom: -20px; \n-webkit-filter: invert(1);\n   filter: invert(1);\n}\n\n#timer {\nbackground: #222831; \ncolor: white; \nfont-size: 50px; \nfont-family: 'LCD', sans-serif;\nheight: 100px; \nwidth: 80%; \nborder: none; \nfont-weight: bold; \ntext-align: center; \nmargin-bottom: 0px;\n}\n\n#timeHolder {\nbackground-color: #123b52; \ncolor: white; \ndisplay: none; \nmargin-bottom: 0px;\n}\n\n#speakingTime{\nbackground-color: #00ffc3; \noutline: none;\nscroll-behavior: smooth;\nheight: 50px; \nwidth: 100px; \nfont-weight: bold; \ncolor: black; \nfont-family: Arial, sans-serif;\nfont-size: 21px; \nmargin: 10px; \ntext-align: center; \nborder: none; \n}\n\n#speakingTime:hover {\nbackground-color: #c300ff; \n}\n\n#volume-visualizer-wrapper {\n  background-color: #222831;\n  margin-top: 0px;\n  padding: 0px;\n  margin-bottom: 0px;\n  width: 80%;\n  display: inline-block; \n  padding-bottom: 10px;\n}\n\n#volume-visualizer {\n  --volume: 0%;\n  position: relative;\n  height: 10px;\n  background-color: #222831;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  width: 100%;\n  border: none; \n  display: inline-block; \n  \n}\n\n#volume-visualizer::before {\n   content: '';\n   position: absolute;\n   top: 0;\n   bottom: 0;\n   left: 0;\n   width: var(--volume);\n   background-color: #c300ff;\n   transition: width 100ms linear;\n}\n#container {\n\n  height: 200px;\n  margin-bottom: 0px;\n  display: none; \n    margin-top: -100px; \n\n  \n}\n\n.video-container {\n\n  position: relative;\n  margin-top: 0px; \n  background-color: #222831; \n  width: 80%;\n  display: inline-block; \n\n}\n\ncanvas {\n  position: absolute;\n  left: 0;\n  top: 0px; \n}\n.result-container {\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n.result-container > div {\n  font-size: 1.3rem;\n  padding: 0.5rem;\n  margin: 5px 0;\n  color: white;\n  text-transform: capitalize;\n}\n\nvideo {\n  width: 100%;\n  margin-bottom: -150px; \n  margin-top: 0px;\n}\n\n#loading{ \nheight: 50px; \n}\n\n#loadingContainer {\ncolor: #fdfd96; \nmargin-bottom: 150%; \nfont-size: 50px; \n}\n\n#initialMessage {\nfont-size: 20px;\ncolor: #c300ff; \n}\n\n#footer {\ndisplay: block; \n  position: absolute;\n  bottom: 0;\n  height: 3rem;   \n  text-align: left;     \n      \n}\n\n#bugs {\ncolor: white; \nfont-size: 12px; \n}\n</style>"]}]}